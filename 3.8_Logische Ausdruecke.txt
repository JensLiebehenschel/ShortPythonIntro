########## Logische Ausdrücke ##########

Nun geht es um logische Ausdrücke.

In Python gibt es Datentyp Boolean.
Dieser kann zwei Werte haben: Wahr und Falsch

auf Englisch True und False.

True und False sind hierbei keine Strings, sondern keywords.
Man muss mit der Groß- und Kleinschreibung aufpassen, denn es ist nur korrekt, wenn der Anfangsbuchstabe groß ist und der Rest klein.

Korrekt:
x = True
y = False

Falsch:
x = true
y = false
x = TRUE
y = FALSE

Benutzt man einen Editor mit Python Syntax Highlighting oder gar Autocompletion, wird man anhand der Hervorhebung erkennen, ob man es richtig geschrieben hat oder nicht


Soviel zu Booleans.
Nun zu vergleichen.
Der Vergleichsoperator, welcher auf Gleichteit prüft ist wie fast überall auch ein "==".

x = 5
y = 5

wahrheitsert = x == y
--> wahrheitswert ist "True"

Vergleiche von konkreten Werten sind mit <,>,<=,>= ebenfalls möglich.

Um einen booleschen Ausdruck zu negieren, benutzt man in C ein Ausrufezeichen

int x = 5;
int y = 5;

!(x == y)
--> False bzw. 0

In Python gibt es dafür das keyword "not"

Das oben geschriebene Beispiel in Python wäre also
x = 5
y = 5

not x == y
--> False


Die gleiche Vorgehensweise bei "logischem und" als auch beim "logischem oder".

Da wird && durch das keyword "and", und || durch das keyword "or" ersetzt.


int x = 5;
int y = 5;
int z = 3;

(x == y) && (x == z || !(y < z))
--> True bzw. 1

Python:

x = 5
y = 5
z = 3

(x == y) and (x == z or not y < z)
--> True